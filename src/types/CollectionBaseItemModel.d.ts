/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CollectionBaseItemModelInterface extends ethers.utils.Interface {
  functions: {
    "collectionName(uint256)": FunctionFragment;
    "cfoAddress()": FunctionFragment;
    "ceoAddress()": FunctionFragment;
    "totalSoldOf(uint256)": FunctionFragment;
    "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)": FunctionFragment;
    "setWithdrawalAddress(address)": FunctionFragment;
    "setCEO(address)": FunctionFragment;
    "setCOO(address)": FunctionFragment;
    "unpause()": FunctionFragment;
    "setCFO(address)": FunctionFragment;
    "clearInventory(uint256)": FunctionFragment;
    "paused()": FunctionFragment;
    "withdrawBalance()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "m_asset()": FunctionFragment;
    "totalSupplyOf(uint256)": FunctionFragment;
    "getArtistAddress(uint256)": FunctionFragment;
    "isActive(uint256)": FunctionFragment;
    "pause()": FunctionFragment;
    "AssetsConfiguredInCollection(uint256,uint256)": FunctionFragment;
    "availableInventoryOf(uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "updateExhibitId(uint256,uint256)": FunctionFragment;
    "isOwner()": FunctionFragment;
    "collectionBaseItems(uint256)": FunctionFragment;
    "upgradeExhibitModelContract(address)": FunctionFragment;
    "purchaseOneUnitInStock(uint256)": FunctionFragment;
    "cooAddress()": FunctionFragment;
    "priceOf(uint256)": FunctionFragment;
    "upgradeAssetModelContract(address)": FunctionFragment;
    "collectionBaseItemInfo(uint256)": FunctionFragment;
    "getCollectionBaseItemsLength()": FunctionFragment;
    "setAuthorizationStatus(address,bool)": FunctionFragment;
    "setActive(uint256,bool)": FunctionFragment;
    "incrementInventory(uint256,uint256)": FunctionFragment;
    "assetURI(uint256)": FunctionFragment;
    "withdrawalAddress()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "creationDate(uint256)": FunctionFragment;
    "setPrice(uint256,uint256)": FunctionFragment;
    "m_exhibit()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "collectionName",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cfoAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ceoAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSoldOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createCollectionBaseItem",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setWithdrawalAddress",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setCEO", values: [string]): string;
  encodeFunctionData(functionFragment: "setCOO", values: [string]): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(functionFragment: "setCFO", values: [string]): string;
  encodeFunctionData(
    functionFragment: "clearInventory",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "withdrawBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "m_asset", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupplyOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArtistAddress",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isActive",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "AssetsConfiguredInCollection",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "availableInventoryOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateExhibitId",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "isOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "collectionBaseItems",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeExhibitModelContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "purchaseOneUnitInStock",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cooAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeAssetModelContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collectionBaseItemInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionBaseItemsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAuthorizationStatus",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setActive",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "incrementInventory",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "assetURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawalAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "creationDate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPrice",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "m_exhibit", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "collectionName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cfoAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ceoAddress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSoldOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createCollectionBaseItem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setWithdrawalAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setCEO", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setCOO", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setCFO", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "clearInventory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "m_asset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupplyOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArtistAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isActive", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "AssetsConfiguredInCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "availableInventoryOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateExhibitId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collectionBaseItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "upgradeExhibitModelContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "purchaseOneUnitInStock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cooAddress", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upgradeAssetModelContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectionBaseItemInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionBaseItemsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAuthorizationStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setActive", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "incrementInventory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "assetURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawalAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "creationDate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPrice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "m_exhibit", data: BytesLike): Result;

  events: {
    "CollectionBaseItemCreated(uint256,uint256,uint256,uint256,uint256,uint256,bool)": EventFragment;
    "CollectionBaseItemInventoryAdjusted(uint256,uint256)": EventFragment;
    "CollectionBaseItemPriceChanged(uint256,uint256)": EventFragment;
    "CollectionBaseItemActiveStatusChanged(uint256,bool)": EventFragment;
    "CollectionBaseItemSoldChanged(uint256,uint256)": EventFragment;
    "ModelContractUpgraded(address,string,address)": EventFragment;
    "ContractUpgrade(address)": EventFragment;
    "Paused()": EventFragment;
    "Unpaused()": EventFragment;
    "Pause()": EventFragment;
    "Unpause()": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollectionBaseItemCreated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CollectionBaseItemInventoryAdjusted"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CollectionBaseItemPriceChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CollectionBaseItemActiveStatusChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CollectionBaseItemSoldChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModelContractUpgraded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContractUpgrade"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Pause"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpause"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class CollectionBaseItemModel extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CollectionBaseItemModelInterface;

  functions: {
    collectionName(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "collectionName(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    cfoAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "cfoAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    ceoAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "ceoAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    totalSoldOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalSoldOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    createCollectionBaseItem(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)"(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setWithdrawalAddress(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setWithdrawalAddress(address)"(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setCEO(
      _newCEO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCEO(address)"(
      _newCEO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setCOO(
      _newCOO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCOO(address)"(
      _newCOO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unpause(overrides?: Overrides): Promise<ContractTransaction>;

    "unpause()"(overrides?: Overrides): Promise<ContractTransaction>;

    setCFO(
      _newCFO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCFO(address)"(
      _newCFO: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    clearInventory(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "clearInventory(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "paused()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    withdrawBalance(overrides?: Overrides): Promise<ContractTransaction>;

    "withdrawBalance()"(overrides?: Overrides): Promise<ContractTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    m_asset(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "m_asset()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    totalSupplyOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalSupplyOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getArtistAddress(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getArtistAddress(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    isActive(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isActive(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    pause(overrides?: Overrides): Promise<ContractTransaction>;

    "pause()"(overrides?: Overrides): Promise<ContractTransaction>;

    AssetsConfiguredInCollection(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "AssetsConfiguredInCollection(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    availableInventoryOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "availableInventoryOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    updateExhibitId(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateExhibitId(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isOwner(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "isOwner()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    collectionBaseItems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      id: BigNumber;
      exhibitId: BigNumber;
      assetId: BigNumber;
      price: BigNumber;
      available: BigNumber;
      supply: BigNumber;
      sold: BigNumber;
      createdAt: BigNumber;
      active: boolean;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: boolean;
    }>;

    "collectionBaseItems(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      id: BigNumber;
      exhibitId: BigNumber;
      assetId: BigNumber;
      price: BigNumber;
      available: BigNumber;
      supply: BigNumber;
      sold: BigNumber;
      createdAt: BigNumber;
      active: boolean;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: boolean;
    }>;

    upgradeExhibitModelContract(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "upgradeExhibitModelContract(address)"(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    purchaseOneUnitInStock(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "purchaseOneUnitInStock(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    cooAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "cooAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    priceOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "priceOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    upgradeAssetModelContract(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "upgradeAssetModelContract(address)"(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    collectionBaseItemInfo(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: boolean;
    }>;

    "collectionBaseItemInfo(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: boolean;
    }>;

    getCollectionBaseItemsLength(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getCollectionBaseItemsLength()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    setAuthorizationStatus(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAuthorizationStatus(address,bool)"(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setActive(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setActive(uint256,bool)"(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    incrementInventory(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "incrementInventory(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    assetURI(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "assetURI(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    withdrawalAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "withdrawalAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    creationDate(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "creationDate(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    setPrice(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPrice(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    m_exhibit(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "m_exhibit()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;
  };

  collectionName(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "collectionName(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  cfoAddress(overrides?: CallOverrides): Promise<string>;

  "cfoAddress()"(overrides?: CallOverrides): Promise<string>;

  ceoAddress(overrides?: CallOverrides): Promise<string>;

  "ceoAddress()"(overrides?: CallOverrides): Promise<string>;

  totalSoldOf(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "totalSoldOf(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  createCollectionBaseItem(
    _exhibitId: BigNumberish,
    _assetId: BigNumberish,
    _initialPrice: BigNumberish,
    _initialInventoryQuantity: BigNumberish,
    _supply: BigNumberish,
    _sold: BigNumberish,
    _active: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)"(
    _exhibitId: BigNumberish,
    _assetId: BigNumberish,
    _initialPrice: BigNumberish,
    _initialInventoryQuantity: BigNumberish,
    _supply: BigNumberish,
    _sold: BigNumberish,
    _active: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setWithdrawalAddress(
    _newWithdrawalAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setWithdrawalAddress(address)"(
    _newWithdrawalAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setCEO(_newCEO: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setCEO(address)"(
    _newCEO: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setCOO(_newCOO: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setCOO(address)"(
    _newCOO: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unpause(overrides?: Overrides): Promise<ContractTransaction>;

  "unpause()"(overrides?: Overrides): Promise<ContractTransaction>;

  setCFO(_newCFO: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setCFO(address)"(
    _newCFO: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  clearInventory(
    _collectionBaseItemId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "clearInventory(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  "paused()"(overrides?: CallOverrides): Promise<boolean>;

  withdrawBalance(overrides?: Overrides): Promise<ContractTransaction>;

  "withdrawBalance()"(overrides?: Overrides): Promise<ContractTransaction>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  m_asset(overrides?: CallOverrides): Promise<string>;

  "m_asset()"(overrides?: CallOverrides): Promise<string>;

  totalSupplyOf(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "totalSupplyOf(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getArtistAddress(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getArtistAddress(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  isActive(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isActive(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  pause(overrides?: Overrides): Promise<ContractTransaction>;

  "pause()"(overrides?: Overrides): Promise<ContractTransaction>;

  AssetsConfiguredInCollection(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "AssetsConfiguredInCollection(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  availableInventoryOf(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "availableInventoryOf(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  updateExhibitId(
    _collectionBaseItemId: BigNumberish,
    _newExhibitId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateExhibitId(uint256,uint256)"(
    _collectionBaseItemId: BigNumberish,
    _newExhibitId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isOwner(overrides?: CallOverrides): Promise<boolean>;

  "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

  collectionBaseItems(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    id: BigNumber;
    exhibitId: BigNumber;
    assetId: BigNumber;
    price: BigNumber;
    available: BigNumber;
    supply: BigNumber;
    sold: BigNumber;
    createdAt: BigNumber;
    active: boolean;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: boolean;
  }>;

  "collectionBaseItems(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    id: BigNumber;
    exhibitId: BigNumber;
    assetId: BigNumber;
    price: BigNumber;
    available: BigNumber;
    supply: BigNumber;
    sold: BigNumber;
    createdAt: BigNumber;
    active: boolean;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: boolean;
  }>;

  upgradeExhibitModelContract(
    newExhibitModelContractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "upgradeExhibitModelContract(address)"(
    newExhibitModelContractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  purchaseOneUnitInStock(
    _collectionBaseItemId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "purchaseOneUnitInStock(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  cooAddress(overrides?: CallOverrides): Promise<string>;

  "cooAddress()"(overrides?: CallOverrides): Promise<string>;

  priceOf(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "priceOf(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  upgradeAssetModelContract(
    newAssetModelContractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "upgradeAssetModelContract(address)"(
    newAssetModelContractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  collectionBaseItemInfo(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: boolean;
  }>;

  "collectionBaseItemInfo(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: boolean;
  }>;

  getCollectionBaseItemsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "getCollectionBaseItemsLength()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setAuthorizationStatus(
    _authorizedAddress: string,
    _authorizedStatus: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAuthorizationStatus(address,bool)"(
    _authorizedAddress: string,
    _authorizedStatus: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setActive(
    _collectionBaseItemId: BigNumberish,
    _active: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setActive(uint256,bool)"(
    _collectionBaseItemId: BigNumberish,
    _active: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  incrementInventory(
    _collectionBaseItemId: BigNumberish,
    _inventoryAdjustment: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "incrementInventory(uint256,uint256)"(
    _collectionBaseItemId: BigNumberish,
    _inventoryAdjustment: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  assetURI(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "assetURI(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  withdrawalAddress(overrides?: CallOverrides): Promise<string>;

  "withdrawalAddress()"(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  creationDate(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "creationDate(uint256)"(
    _collectionBaseItemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setPrice(
    _collectionBaseItemId: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPrice(uint256,uint256)"(
    _collectionBaseItemId: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  m_exhibit(overrides?: CallOverrides): Promise<string>;

  "m_exhibit()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    collectionName(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "collectionName(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    cfoAddress(overrides?: CallOverrides): Promise<string>;

    "cfoAddress()"(overrides?: CallOverrides): Promise<string>;

    ceoAddress(overrides?: CallOverrides): Promise<string>;

    "ceoAddress()"(overrides?: CallOverrides): Promise<string>;

    totalSoldOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "totalSoldOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createCollectionBaseItem(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)"(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setWithdrawalAddress(
      _newWithdrawalAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setWithdrawalAddress(address)"(
      _newWithdrawalAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCEO(_newCEO: string, overrides?: CallOverrides): Promise<void>;

    "setCEO(address)"(
      _newCEO: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCOO(_newCOO: string, overrides?: CallOverrides): Promise<void>;

    "setCOO(address)"(
      _newCOO: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unpause(overrides?: CallOverrides): Promise<void>;

    "unpause()"(overrides?: CallOverrides): Promise<void>;

    setCFO(_newCFO: string, overrides?: CallOverrides): Promise<void>;

    "setCFO(address)"(
      _newCFO: string,
      overrides?: CallOverrides
    ): Promise<void>;

    clearInventory(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "clearInventory(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    "paused()"(overrides?: CallOverrides): Promise<boolean>;

    withdrawBalance(overrides?: CallOverrides): Promise<void>;

    "withdrawBalance()"(overrides?: CallOverrides): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    m_asset(overrides?: CallOverrides): Promise<string>;

    "m_asset()"(overrides?: CallOverrides): Promise<string>;

    totalSupplyOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "totalSupplyOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArtistAddress(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getArtistAddress(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    isActive(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isActive(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    pause(overrides?: CallOverrides): Promise<void>;

    "pause()"(overrides?: CallOverrides): Promise<void>;

    AssetsConfiguredInCollection(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "AssetsConfiguredInCollection(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    availableInventoryOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "availableInventoryOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    updateExhibitId(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateExhibitId(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isOwner(overrides?: CallOverrides): Promise<boolean>;

    "isOwner()"(overrides?: CallOverrides): Promise<boolean>;

    collectionBaseItems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      id: BigNumber;
      exhibitId: BigNumber;
      assetId: BigNumber;
      price: BigNumber;
      available: BigNumber;
      supply: BigNumber;
      sold: BigNumber;
      createdAt: BigNumber;
      active: boolean;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: boolean;
    }>;

    "collectionBaseItems(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      id: BigNumber;
      exhibitId: BigNumber;
      assetId: BigNumber;
      price: BigNumber;
      available: BigNumber;
      supply: BigNumber;
      sold: BigNumber;
      createdAt: BigNumber;
      active: boolean;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: boolean;
    }>;

    upgradeExhibitModelContract(
      newExhibitModelContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "upgradeExhibitModelContract(address)"(
      newExhibitModelContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    purchaseOneUnitInStock(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "purchaseOneUnitInStock(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cooAddress(overrides?: CallOverrides): Promise<string>;

    "cooAddress()"(overrides?: CallOverrides): Promise<string>;

    priceOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "priceOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    upgradeAssetModelContract(
      newAssetModelContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "upgradeAssetModelContract(address)"(
      newAssetModelContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    collectionBaseItemInfo(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: boolean;
    }>;

    "collectionBaseItemInfo(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: boolean;
    }>;

    getCollectionBaseItemsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getCollectionBaseItemsLength()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAuthorizationStatus(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAuthorizationStatus(address,bool)"(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setActive(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setActive(uint256,bool)"(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    incrementInventory(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "incrementInventory(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    assetURI(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "assetURI(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    withdrawalAddress(overrides?: CallOverrides): Promise<string>;

    "withdrawalAddress()"(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    creationDate(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "creationDate(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setPrice(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPrice(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    m_exhibit(overrides?: CallOverrides): Promise<string>;

    "m_exhibit()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    CollectionBaseItemCreated(
      id: BigNumberish | null,
      exhibitId: BigNumberish | null,
      assetId: BigNumberish | null,
      price: null,
      available: null,
      supply: null,
      active: null
    ): EventFilter;

    CollectionBaseItemInventoryAdjusted(
      collectionBaseItemId: null,
      available: null
    ): EventFilter;

    CollectionBaseItemPriceChanged(
      collectionBaseItemId: null,
      price: null
    ): EventFilter;

    CollectionBaseItemActiveStatusChanged(
      collectionBaseItemId: null,
      active: null
    ): EventFilter;

    CollectionBaseItemSoldChanged(
      collectionBaseItemId: null,
      sold: null
    ): EventFilter;

    ModelContractUpgraded(
      upgrader: string | null,
      contractName: string | null,
      newContractAddress: null
    ): EventFilter;

    ContractUpgrade(newContract: null): EventFilter;

    Paused(): EventFilter;

    Unpaused(): EventFilter;

    Pause(): EventFilter;

    Unpause(): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    collectionName(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collectionName(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    cfoAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "cfoAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    ceoAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "ceoAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSoldOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "totalSoldOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createCollectionBaseItem(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)"(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setWithdrawalAddress(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setWithdrawalAddress(address)"(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setCEO(_newCEO: string, overrides?: Overrides): Promise<BigNumber>;

    "setCEO(address)"(
      _newCEO: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setCOO(_newCOO: string, overrides?: Overrides): Promise<BigNumber>;

    "setCOO(address)"(
      _newCOO: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unpause(overrides?: Overrides): Promise<BigNumber>;

    "unpause()"(overrides?: Overrides): Promise<BigNumber>;

    setCFO(_newCFO: string, overrides?: Overrides): Promise<BigNumber>;

    "setCFO(address)"(
      _newCFO: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    clearInventory(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "clearInventory(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    "paused()"(overrides?: CallOverrides): Promise<BigNumber>;

    withdrawBalance(overrides?: Overrides): Promise<BigNumber>;

    "withdrawBalance()"(overrides?: Overrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    m_asset(overrides?: CallOverrides): Promise<BigNumber>;

    "m_asset()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupplyOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "totalSupplyOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArtistAddress(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getArtistAddress(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isActive(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isActive(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pause(overrides?: Overrides): Promise<BigNumber>;

    "pause()"(overrides?: Overrides): Promise<BigNumber>;

    AssetsConfiguredInCollection(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "AssetsConfiguredInCollection(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    availableInventoryOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "availableInventoryOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    updateExhibitId(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateExhibitId(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "isOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    collectionBaseItems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collectionBaseItems(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    upgradeExhibitModelContract(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "upgradeExhibitModelContract(address)"(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    purchaseOneUnitInStock(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "purchaseOneUnitInStock(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    cooAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "cooAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    priceOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "priceOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    upgradeAssetModelContract(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "upgradeAssetModelContract(address)"(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    collectionBaseItemInfo(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collectionBaseItemInfo(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionBaseItemsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getCollectionBaseItemsLength()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAuthorizationStatus(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAuthorizationStatus(address,bool)"(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setActive(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setActive(uint256,bool)"(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    incrementInventory(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "incrementInventory(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    assetURI(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "assetURI(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawalAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "withdrawalAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    creationDate(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "creationDate(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setPrice(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPrice(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    m_exhibit(overrides?: CallOverrides): Promise<BigNumber>;

    "m_exhibit()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    collectionName(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "collectionName(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cfoAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cfoAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ceoAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ceoAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSoldOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalSoldOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createCollectionBaseItem(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createCollectionBaseItem(uint256,uint256,uint256,uint256,uint256,uint256,bool)"(
      _exhibitId: BigNumberish,
      _assetId: BigNumberish,
      _initialPrice: BigNumberish,
      _initialInventoryQuantity: BigNumberish,
      _supply: BigNumberish,
      _sold: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setWithdrawalAddress(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setWithdrawalAddress(address)"(
      _newWithdrawalAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setCEO(
      _newCEO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCEO(address)"(
      _newCEO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setCOO(
      _newCOO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCOO(address)"(
      _newCOO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unpause(overrides?: Overrides): Promise<PopulatedTransaction>;

    "unpause()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setCFO(
      _newCFO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCFO(address)"(
      _newCFO: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    clearInventory(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "clearInventory(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "paused()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    withdrawBalance(overrides?: Overrides): Promise<PopulatedTransaction>;

    "withdrawBalance()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    m_asset(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "m_asset()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupplyOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalSupplyOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArtistAddress(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getArtistAddress(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isActive(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isActive(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pause(overrides?: Overrides): Promise<PopulatedTransaction>;

    "pause()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    AssetsConfiguredInCollection(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "AssetsConfiguredInCollection(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    availableInventoryOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "availableInventoryOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    updateExhibitId(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateExhibitId(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _newExhibitId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    collectionBaseItems(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "collectionBaseItems(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    upgradeExhibitModelContract(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "upgradeExhibitModelContract(address)"(
      newExhibitModelContractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    purchaseOneUnitInStock(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "purchaseOneUnitInStock(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    cooAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cooAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceOf(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "priceOf(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    upgradeAssetModelContract(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "upgradeAssetModelContract(address)"(
      newAssetModelContractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    collectionBaseItemInfo(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "collectionBaseItemInfo(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionBaseItemsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollectionBaseItemsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAuthorizationStatus(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAuthorizationStatus(address,bool)"(
      _authorizedAddress: string,
      _authorizedStatus: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setActive(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setActive(uint256,bool)"(
      _collectionBaseItemId: BigNumberish,
      _active: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    incrementInventory(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "incrementInventory(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _inventoryAdjustment: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    assetURI(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "assetURI(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawalAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "withdrawalAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    creationDate(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "creationDate(uint256)"(
      _collectionBaseItemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setPrice(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPrice(uint256,uint256)"(
      _collectionBaseItemId: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    m_exhibit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "m_exhibit()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
