/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Dada721 } from "./Dada721";

export class Dada721Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): Promise<Dada721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<Dada721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): Dada721 {
    return super.attach(address) as Dada721;
  }
  connect(signer: Signer): Dada721Factory {
    return super.connect(signer) as Dada721Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dada721 {
    return new Contract(address, _abi, signerOrProvider) as Dada721;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015f6380380620015f68339810160408190526200003491620001b9565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61137380620002836000396000f3fe6080604052600436106100c25760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610203578063b88d4fde14610223578063c87b56dd14610243578063e985e9c514610263576100c2565b80636352211e146101a157806370a08231146101c157806395d89b41146101ee576100c2565b806301ffc9a7146100c757806306fdde03146100fd578063081812fc1461011f578063095ea7b31461014c57806323b872dd1461016e57806342842e0e14610181575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610d67565b610283565b6040516100f49190610e63565b60405180910390f35b34801561010957600080fd5b506101126102b0565b6040516100f49190610e6e565b34801561012b57600080fd5b5061013f61013a366004610d9f565b610342565b6040516100f49190610e12565b34801561015857600080fd5b5061016c610167366004610d3e565b61038e565b005b61016c61017c366004610bfd565b610426565b34801561018d57600080fd5b5061016c61019c366004610bfd565b61045e565b3480156101ad57600080fd5b5061013f6101bc366004610d9f565b610479565b3480156101cd57600080fd5b506101e16101dc366004610bb1565b6104ae565b6040516100f49190611200565b3480156101fa57600080fd5b506101126104f2565b34801561020f57600080fd5b5061016c61021e366004610d04565b610501565b34801561022f57600080fd5b5061016c61023e366004610c38565b6105cf565b34801561024f57600080fd5b5061011261025e366004610d9f565b61060e565b34801561026f57600080fd5b506100e761027e366004610bcb565b610691565b60006001600160e01b031982166380ac58cd60e01b14806102a857506102a8826106bf565b90505b919050565b6060600080546102bf90611278565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90611278565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b600061034d826106d8565b6103725760405162461bcd60e51b81526004016103699061108a565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061039982610479565b9050806001600160a01b0316836001600160a01b031614156103cd5760405162461bcd60e51b81526004016103699061116e565b806001600160a01b03166103df6106f5565b6001600160a01b031614806103fb57506103fb8161027e6106f5565b6104175760405162461bcd60e51b815260040161036990610f9a565b61042183836106f9565b505050565b6104376104316106f5565b82610767565b6104535760405162461bcd60e51b8152600401610369906111af565b6104218383836107ec565b610421838383604051806020016040528060008152506105cf565b6000818152600260205260408120546001600160a01b0316806102a85760405162461bcd60e51b815260040161036990611041565b60006001600160a01b0382166104d65760405162461bcd60e51b815260040161036990610ff7565b506001600160a01b031660009081526003602052604090205490565b6060600180546102bf90611278565b6105096106f5565b6001600160a01b0316826001600160a01b0316141561053a5760405162461bcd60e51b815260040161036990610f17565b80600560006105476106f5565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561058b6106f5565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516105c39190610e63565b60405180910390a35050565b6105e06105da6106f5565b83610767565b6105fc5760405162461bcd60e51b8152600401610369906111af565b61060884848484610919565b50505050565b6060610619826106d8565b6106355760405162461bcd60e51b81526004016103699061111f565b600061063f61094c565b9050600081511161065f576040518060200160405280600081525061068a565b806106698461095e565b60405160200161067a929190610de3565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061072e82610479565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610772826106d8565b61078e5760405162461bcd60e51b815260040161036990610f4e565b600061079983610479565b9050806001600160a01b0316846001600160a01b031614806107d45750836001600160a01b03166107c984610342565b6001600160a01b0316145b806107e457506107e48185610691565b949350505050565b826001600160a01b03166107ff82610479565b6001600160a01b0316146108255760405162461bcd60e51b8152600401610369906110d6565b6001600160a01b03821661084b5760405162461bcd60e51b815260040161036990610ed3565b610856838383610421565b6108616000826106f9565b6001600160a01b038316600090815260036020526040812080546001929061088a908490611235565b90915550506001600160a01b03821660009081526003602052604081208054600192906108b8908490611209565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109248484846107ec565b61093084848484610a79565b6106085760405162461bcd60e51b815260040161036990610e81565b60408051602081019091526000815290565b60608161098357506040805180820190915260018152600360fc1b60208201526102ab565b8160005b81156109ad5780610997816112b3565b91506109a69050600a83611221565b9150610987565b60008167ffffffffffffffff8111156109d657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a00576020820181803683370190505b5090505b84156107e457610a15600183611235565b9150610a22600a866112ce565b610a2d906030611209565b60f81b818381518110610a5057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610a72600a86611221565b9450610a04565b6000610a8d846001600160a01b0316610b94565b15610b8957836001600160a01b031663150b7a02610aa96106f5565b8786866040518563ffffffff1660e01b8152600401610acb9493929190610e26565b602060405180830381600087803b158015610ae557600080fd5b505af1925050508015610b15575060408051601f3d908101601f19168201909252610b1291810190610d83565b60015b610b6f573d808015610b43576040519150601f19603f3d011682016040523d82523d6000602084013e610b48565b606091505b508051610b675760405162461bcd60e51b815260040161036990610e81565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107e4565b506001949350505050565b3b151590565b80356001600160a01b03811681146102ab57600080fd5b600060208284031215610bc2578081fd5b61068a82610b9a565b60008060408385031215610bdd578081fd5b610be683610b9a565b9150610bf460208401610b9a565b90509250929050565b600080600060608486031215610c11578081fd5b610c1a84610b9a565b9250610c2860208501610b9a565b9150604084013590509250925092565b60008060008060808587031215610c4d578081fd5b610c5685610b9a565b93506020610c65818701610b9a565b935060408601359250606086013567ffffffffffffffff80821115610c88578384fd5b818801915088601f830112610c9b578384fd5b813581811115610cad57610cad61130e565b604051601f8201601f1916810185018381118282101715610cd057610cd061130e565b60405281815283820185018b1015610ce6578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215610d16578182fd5b610d1f83610b9a565b915060208301358015158114610d33578182fd5b809150509250929050565b60008060408385031215610d50578182fd5b610d5983610b9a565b946020939093013593505050565b600060208284031215610d78578081fd5b813561068a81611324565b600060208284031215610d94578081fd5b815161068a81611324565b600060208284031215610db0578081fd5b5035919050565b60008151808452610dcf81602086016020860161124c565b601f01601f19169290920160200192915050565b60008351610df581846020880161124c565b835190830190610e0981836020880161124c565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610e5990830184610db7565b9695505050505050565b901515815260200190565b60006020825261068a6020830184610db7565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b6000821982111561121c5761121c6112e2565b500190565b600082611230576112306112f8565b500490565b600082821015611247576112476112e2565b500390565b60005b8381101561126757818101518382015260200161124f565b838111156106085750506000910152565b60028104600182168061128c57607f821691505b602082108114156112ad57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112c7576112c76112e2565b5060010190565b6000826112dd576112dd6112f8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461133a57600080fd5b5056fea26469706673582212202fd40f7e9bf33ad4e0c840a5a415a2d1994ad93f83eda835d117e035ac05492364736f6c63430008000033";
