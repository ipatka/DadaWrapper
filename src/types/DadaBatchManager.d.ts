/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DadaBatchManagerInterface extends ethers.utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "OPERATOR_ROLE()": FunctionFragment;
    "batchAcceptBidForCollectibles(uint256[3][])": FunctionFragment;
    "batchOfferCollectiblesForSale(uint256[3][])": FunctionFragment;
    "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])": FunctionFragment;
    "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])": FunctionFragment;
    "batchTransferToAddress(address,uint256[2][])": FunctionFragment;
    "batchTransferToAddresses(address[],uint256[2][])": FunctionFragment;
    "batchWithdrawOffersForCollectibles(uint256[2][])": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "getRoleMember(bytes32,uint256)": FunctionFragment;
    "getRoleMemberCount(bytes32)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "withdraw(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPERATOR_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "batchAcceptBidForCollectibles",
    values: [[BigNumberish, BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchOfferCollectiblesForSale",
    values: [[BigNumberish, BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchOfferCollectiblesForSaleToAddress",
    values: [string, [BigNumberish, BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchOfferCollectiblesForSaleToAddresses",
    values: [string[], [BigNumberish, BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTransferToAddress",
    values: [string, [BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTransferToAddresses",
    values: [string[], [BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchWithdrawOffersForCollectibles",
    values: [[BigNumberish, BigNumberish][]]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "withdraw", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPERATOR_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchAcceptBidForCollectibles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchOfferCollectiblesForSale",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchOfferCollectiblesForSaleToAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchOfferCollectiblesForSaleToAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTransferToAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTransferToAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchWithdrawOffersForCollectibles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

  events: {
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
}

export class DadaBatchManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DadaBatchManagerInterface;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    OPERATOR_ROLE(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "OPERATOR_ROLE()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    batchAcceptBidForCollectibles(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchAcceptBidForCollectibles(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchOfferCollectiblesForSale(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchOfferCollectiblesForSale(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchOfferCollectiblesForSaleToAddress(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])"(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchOfferCollectiblesForSaleToAddresses(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])"(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchTransferToAddress(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchTransferToAddress(address,uint256[2][])"(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchTransferToAddresses(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchTransferToAddresses(address[],uint256[2][])"(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchWithdrawOffersForCollectibles(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchWithdrawOffersForCollectibles(uint256[2][])"(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdraw(_to: string, overrides?: Overrides): Promise<ContractTransaction>;

    "withdraw(address)"(
      _to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  OPERATOR_ROLE(overrides?: CallOverrides): Promise<string>;

  "OPERATOR_ROLE()"(overrides?: CallOverrides): Promise<string>;

  batchAcceptBidForCollectibles(
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchAcceptBidForCollectibles(uint256[3][])"(
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchOfferCollectiblesForSale(
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchOfferCollectiblesForSale(uint256[3][])"(
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchOfferCollectiblesForSaleToAddress(
    to: string,
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])"(
    to: string,
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchOfferCollectiblesForSaleToAddresses(
    to: string[],
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])"(
    to: string[],
    drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchTransferToAddress(
    to: string,
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchTransferToAddress(address,uint256[2][])"(
    to: string,
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchTransferToAddresses(
    to: string[],
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchTransferToAddresses(address[],uint256[2][])"(
    to: string[],
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchWithdrawOffersForCollectibles(
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchWithdrawOffersForCollectibles(uint256[2][])"(
    drawingPrint: [BigNumberish, BigNumberish][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getRoleAdmin(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMember(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getRoleMember(bytes32,uint256)"(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMemberCount(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRoleMemberCount(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  grantRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "grantRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  hasRole(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  renounceRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "renounceRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdraw(_to: string, overrides?: Overrides): Promise<ContractTransaction>;

  "withdraw(address)"(
    _to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    OPERATOR_ROLE(overrides?: CallOverrides): Promise<string>;

    "OPERATOR_ROLE()"(overrides?: CallOverrides): Promise<string>;

    batchAcceptBidForCollectibles(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchAcceptBidForCollectibles(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchOfferCollectiblesForSale(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchOfferCollectiblesForSale(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchOfferCollectiblesForSaleToAddress(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])"(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchOfferCollectiblesForSaleToAddresses(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])"(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchTransferToAddress(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchTransferToAddress(address,uint256[2][])"(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchTransferToAddresses(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchTransferToAddresses(address[],uint256[2][])"(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    batchWithdrawOffersForCollectibles(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchWithdrawOffersForCollectibles(uint256[2][])"(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: CallOverrides
    ): Promise<void>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdraw(_to: string, overrides?: CallOverrides): Promise<void>;

    "withdraw(address)"(_to: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    RoleAdminChanged(
      role: BytesLike | null,
      previousAdminRole: BytesLike | null,
      newAdminRole: BytesLike | null
    ): EventFilter;

    RoleGranted(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;

    RoleRevoked(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    OPERATOR_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "OPERATOR_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    batchAcceptBidForCollectibles(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchAcceptBidForCollectibles(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchOfferCollectiblesForSale(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchOfferCollectiblesForSale(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchOfferCollectiblesForSaleToAddress(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])"(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchOfferCollectiblesForSaleToAddresses(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])"(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchTransferToAddress(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchTransferToAddress(address,uint256[2][])"(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchTransferToAddresses(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchTransferToAddresses(address[],uint256[2][])"(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchWithdrawOffersForCollectibles(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchWithdrawOffersForCollectibles(uint256[2][])"(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdraw(_to: string, overrides?: Overrides): Promise<BigNumber>;

    "withdraw(address)"(_to: string, overrides?: Overrides): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_ADMIN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    OPERATOR_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "OPERATOR_ROLE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    batchAcceptBidForCollectibles(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchAcceptBidForCollectibles(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchOfferCollectiblesForSale(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchOfferCollectiblesForSale(uint256[3][])"(
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchOfferCollectiblesForSaleToAddress(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchOfferCollectiblesForSaleToAddress(address,uint256[3][])"(
      to: string,
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchOfferCollectiblesForSaleToAddresses(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchOfferCollectiblesForSaleToAddresses(address[],uint256[3][])"(
      to: string[],
      drawingPrintPrice: [BigNumberish, BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchTransferToAddress(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchTransferToAddress(address,uint256[2][])"(
      to: string,
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchTransferToAddresses(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchTransferToAddresses(address[],uint256[2][])"(
      to: string[],
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchWithdrawOffersForCollectibles(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchWithdrawOffersForCollectibles(uint256[2][])"(
      drawingPrint: [BigNumberish, BigNumberish][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdraw(_to: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    "withdraw(address)"(
      _to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
